[{"C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\index.js":"1","C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\App.js":"2","C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\components\\header.js":"3","C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\components\\editNote.js":"4","C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\components\\addNote.js":"5"},{"size":181,"mtime":1608495699661,"results":"6","hashOfConfig":"7"},{"size":3380,"mtime":1611830750935,"results":"8","hashOfConfig":"7"},{"size":466,"mtime":1610094448905,"results":"9","hashOfConfig":"7"},{"size":2036,"mtime":1611837196963,"results":"10","hashOfConfig":"7"},{"size":844,"mtime":1610115565109,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1v6ab9l",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\index.js",[],["25","26"],"C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\App.js",["27"],"import { useState, useEffect } from 'react';\nimport AddNote from './components/addNote';\nimport EditNote from './components/editNote';\nimport { Header, Footer } from './components/header';\n\nconst App = () => {\n  const [edit, setEdit] = useState('');\n  const [search, setSearch] = useState('');\n  const [text, setText] = useState({\n    input: '', textarea: '',\n  });\n  \n  const noteList = localStorage.getItem('noteKey')\n    ? JSON.parse(localStorage.getItem('noteKey'))\n    : [];\n  const [noteArray, setNoteArray] = useState(noteList);\n\n  const currentDate = new Date();\n  const options = {\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  }\n  const showDate = new Intl.DateTimeFormat(undefined, options).format(currentDate);\n\n  useEffect(() => {\n    const noteList = JSON.stringify(noteArray);\n    localStorage.setItem('noteKey', noteList);\n  }, [noteArray]);\n\n  const handleChange = event => {\n    const value = event.target.value;\n\n    setText({\n      ...text,\n      [event.target.name]: value,\n    })\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (text.input === '' && text.textarea === '') {\n      return alert('Empty Note')\n    };\n\n    const noteObject = {\n      title: text.input,\n      content: text.textarea,\n      id: noteArray.length + 1,\n    };\n\n    setNoteArray([noteObject, ...noteArray]);\n    setText({\n      input: '', textarea: '',\n    });\n  };\n\n  const deleteNote = idToDel => {\n    const filteredNote = noteArray.filter(note => note.id !== idToDel)\n    setNoteArray(filteredNote)\n  }\n\n  const submitEdit = (event, idToEdit) => {\n    event.preventDefault();\n\n    const updatedNote = noteArray.map(note => {\n      if (note.id === idToEdit) {\n        return {\n          id: note.id,\n          title: event.target.input.value,\n          content: event.target.textarea.value,\n        }\n      } else {\n        return note;\n      }\n    })\n    setNoteArray(updatedNote)\n    setEdit('')\n  };\n\n  const handleSearch = (event) => {\n    const value = event.target.value;\n    setSearch(value)\n  };\n\n  const filterNotes = noteArray.filter(note => \n    note.title.toLowerCase().includes(search.toLowerCase()) || \n    note.content.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className='font-sans border-box bg-gray-100 flex flex-col h-screen'>\n      <Header />\n      <div className='mx-3'>\n        <input \n          className='rounded-full py-1 px-6 my-2 w-full text-lg font-medium italic focus:outline-none focus:ring-2 focus:ring-yellow-400 bg-gray-200 placeholder-gray-600 focus:placeholder-gray-400'\n          type='search'\n          placeholder='Search notes'\n          value={search}  \n          onChange={handleSearch} \n        />\n      </div>\n\n      <AddNote \n        value={text}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n\n      <div className='gird m-3'>\n        {\n          filterNotes.map(note => (\n            <div key={note.id} className='rounded-lg p-3 bg-white shadow-md flex flex-col'>\n              <EditNote \n                note={note}\n                edit={edit}\n                submitEdit={submitEdit}\n                onEdit={() => setEdit(note.id)}\n                onDelete={() => deleteNote(note.id)}\n              />\n            </div>\n          ))\n        }\n      </div>\n\n      <Footer />\n    </div>\n  )\n};\n\nexport default App;","C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\components\\header.js",[],"C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\components\\editNote.js",["28"],"import ReactModal from 'react-modal';\n\nconst EditNote = ({note, edit, submitEdit, onEdit, onDelete}) => {\n  if (note.id !== edit) {\n    return (\n      <>\n        <div className='mb-2'>\n          <div className='mb-0.5 font-medium truncate'>{note.title}</div>\n          <div className='free'>{note.content}</div>\n        </div>\n\n        <div className='flex mt-auto'>\n          <button className='mr-auto focus:outline-none transform hover:scale-110' onClick={onEdit}>\n            <svg data-src=\"https://s.svgbox.net/hero-solid.svg?ic=pencil-alt\" width=\"28\" height=\"28\" fill=\"currentColor\"></svg>\n          </button>\n          \n          <button className='focus:outline-none transform hover:scale-110' onClick={onDelete}>\n            <svg data-src=\"https://s.svgbox.net/hero-solid.svg?ic=trash\" width=\"28\" height=\"28\" fill=\"currentColor\"></svg>\n          </button>\n        </div>\n      </>\n    )\n  } else {\n    return (\n      <form onSubmit={(e) => submitEdit(e, note.id)} className=''>\n        <input \n          className='px-1 pb-1 mb-1 w-full focus:outline-none border-b'\n          type='text'\n          placeholder='Title'\n          name='input'\n          defaultValue={note.title} \n        />\n\n        <textarea \n          className='px-1 pt-1 mb-1 w-full focus:outline-none border-b'\n          placeholder='Take a note'\n          name='textarea'\n          defaultValue={note.content}\n        />\n\n        <div className='flex'>\n          <button \n            className='text-black font-medium rounded-lg px-2 py-0.5 mr-auto bg-yellow-300 hover:bg-yellow-400 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:ring-opacity-50 transform hover:scale-105'\n            onClick={(e) => submitEdit(e, note)}>Back\n          </button>\n\n          <button className='text-black font-medium rounded-lg px-2 py-0.5 bg-yellow-300 hover:bg-yellow-400 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:ring-opacity-50 transform hover:scale-105'>Submit</button>\n        </div>\n      </form>\n    )\n  }\n};\n\nexport default EditNote;","C:\\Users\\Areh\\Desktop\\Github\\Projects\\arehtunde\\notes\\src\\components\\addNote.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":25,"column":9,"nodeType":"35","messageId":"36","endLine":25,"endColumn":17},{"ruleId":"33","severity":1,"message":"37","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":18},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'showDate' is assigned a value but never used.","Identifier","unusedVar","'ReactModal' is defined but never used.","no-global-assign","no-unsafe-negation"]